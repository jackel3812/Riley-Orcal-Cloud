#cloud-config
package_update: true
package_upgrade: true

packages:
  - docker.io
  - python3-pip
  - nginx
  - certbot
  - python3-certbot-nginx
  - git

write_files:
  - path: /etc/systemd/system/riley.service
    content: |
      [Unit]
      Description=Riley AI Server
      After=docker.service
      Requires=docker.service

      [Service]
      TimeoutStartSec=0
      Restart=always
      ExecStartPre=-/usr/bin/docker stop riley
      ExecStartPre=-/usr/bin/docker rm riley
      ExecStart=/usr/bin/docker run --name riley \
        -v /opt/riley/data:/opt/app/data \
        -v /opt/riley/models:/opt/app/models \
        -p 8080:8080 \
        --env-file /opt/riley/env \
        iad.ocir.io/${OCI_TENANCY}/riley-server:latest

      [Install]
      WantedBy=multi-user.target

  - path: /etc/nginx/sites-available/riley
    content: |
      server {
          listen 443 ssl http2;
          server_name api.riley.oracle.cloud;

          ssl_certificate /etc/letsencrypt/live/api.riley.oracle.cloud/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/api.riley.oracle.cloud/privkey.pem;

          location / {
              proxy_pass http://localhost:8080;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection 'upgrade';
              proxy_set_header Host $host;
              proxy_cache_bypass $http_upgrade;
          }
      }

runcmd:
  - mkdir -p /opt/riley/{data,models,logs}
  - systemctl enable docker
  - systemctl start docker
  - ln -s /etc/nginx/sites-available/riley /etc/nginx/sites-enabled/
  - certbot --nginx -d api.riley.oracle.cloud --non-interactive --agree-tos -m admin@riley.oracle.cloud
  - systemctl enable riley
  - systemctl start riley
  - systemctl restart nginx

final_message: "Riley server is ready to roll! ðŸš€"
